2017年１２月１１日　　星期一　　第６天

列表的　in / not in 运算符
作用：判断一个值是否存在于列表中存在返回True，同字符串的in运算符相同
示例：
　　x=[1,'two',3,'four']
列表的索引操作：
语法：
　　列表[整数表达式]
用法：
　　等同于字符串的索引
　　索引分正向索引和反向索引（同字符串）
示例：
l=[1,2,3,4]
print(l[0])  #1
列表是可变的序列，可以通过索引改变列表的元素
示例：
L=[1,2,3,4]
L[2]=3.14 #索引赋值
print(L)
L+=[5]#创建新的列表，不是改变原列表

列表的切片：
语法：
　　列表[开始索引：停止索引:步长]
列表的切片取值规则等同于字符串切片规则

列表的切片赋值：
作用：可改变原列表，可插入和删除数据，也可以改变数据
说明:切片赋值的等号运算符的右侧必须是一个序列
语法：
　　列表[开始索引：终止索引：步长]＝序列
示例：
l=[2,3,4]
l[0,1]=[1.1,2,3] #[1.1,2,3,3,4]
l[::2]=[1.1,2.2] #[1.1,3,2.2]
l[1:1]=[2.5,2.6] #[2,2.5,2.6,3,4]
l[1,2]='ABC'    #[2,'A','B','C',4]
l[::2]=[10,20]   #[10,3,20]
对于步长大于１的切片赋值，序列的个数要等于切出的段数
对于反向切片的赋值，规则同正向赋值

del 语句
　　可以用del语句删除变量，也可以用它来删除列表的中的元素
语法：
　　del 列表[整数表达式]　　＃索引
　　del 列表[::]         #切片
示例
 del l[3]  # l=[1,2,4,5,6]
 del l[::2] #l=2,4,6]

python3中常用的函数：
len(seq)
max(x)
min(x)
sum(x)   返回序列中所有元素的和（元素必须是数值类型）
any(x)   真值测试，如果序列中其中一个值为真值则返回True否则False
all(x)   真值测试，所有值为真返回True，否则False

示例：
　l=[1,2,3,4,5,6]
len(l) #6
max(l)  # 6
min(l)   #1

常用的列表方法　methon:
对象.方法名（传参）
假设列表名为l
l.index(v[,begin[,end]])
 返回对应元素的索引下标，begin为开始索引，end为结束索引，
l.insert(index,obj)将某个元素插入到列表中的指定位置
l.count(x) 返回列表　　中的元素个数
l.remove(x) 从列表中删除第一次出现在列表中的值
l.copy() 复制此列表（只复制一层，不会复制深层对象）
l.append(x) 向列表中追加单个元素
l.extend(lst) 向列表追加另一个列表
l.clear() 清空列表，等同于l[:]=[]
l.sort(reverse=False) 将列表中的元素进行排序，默认顺序按值的小到大顺序排列
l.reverse()  反转
l.pop([index])删除索引引用的元素，如果不加索引，默认删除最后元素同时返回删除对象
详细>>>help(list)

思考
l=[1,2,3]
l2=l
l=[]  #不算清空列表
l[:]=[]　　等同于l.clear()

l=[2,8,6,4]
l.sort()    #l=[2,4,6,8]
练习：
输入多行文字，存入列表中，每次输入后回车算一行，任意输入多行，当直接输入回车（即空行时算作输入结束）
）１打印刚才输入的行数
）２按原输出的内容在屏幕上输出内容
）３打印你刚才共输出多少字符

深拷贝和浅拷贝
浅拷贝（shallow copy)
示例：
l=[3.1,3.2]
l1=[1,2,l]
l2=l1.copy()
l[0]=3.14
print(l1)   # l1=[1,2,[3.14,3.2]]
print(l2)   #l2=[1,2,[3.14,3.2]]

深拷贝（deep copy)
import copy  #导入copy模块
l=[3.1,3.2]
l1=[1,2,l]
l2=copy.deepcopy(l1) #深拷贝
l[0]=3.14
print(l1) #[1,2,[3.14,3.2]]
print(l2)  #[1,2,[3.1,3.2]]
注：深拷贝通常只对可变对象进行复制，不可变对象不变

列表与字符串比较
　　列表和字符串都是序列，元素之间有先后关系
　　字符串是不可变的序列，列表是可变的序列
　　字符串中每个元素只能存储字符，而列表可以存储任意类型的元素
　　列表和字符串都是可迭代对象
练习：
已知右列表l=[3,5],用来的方法实现列表变为：
l=[1,2,3,4,5],将列表反转，删除最后一个后打印此列表
print[5,4,3,2]

字符串文本解析方法：
S.split(sep=None)
将字符串迭代的对象进行拼接，中间用字符串进行分隔

中文帮助文档：
http://usyiyi.cn
示例：
s='abcd abc ab a'
s.split(' ')  #s=['abcd','abc','ab','a']

s.join(iterable)
用可迭代对象中的字符串，返回一个中间用s进行的字符串
l=['welcome','to','beijing']
s=' '.join(l) #s='welcome to beijing'

练习：
１由字符串’hello'生成字符串‘h e l l o'和'h-e-l-l-o'

２．有一些数存在于列表中，如：
l=[1,2,45,4,5.....99,98]
要求将列表中只出现一次的元素存入另一个列表l2
3.将10000以内的所有素数存于列表中，求这些素数的和
