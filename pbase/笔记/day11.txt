2017年１２月1８日　　星期一　　第１１天

闭包　closure
  将组成函数的语句和这些语句的执行环境打包在一起，得到的对象称为闭包closure
闭包说明：
　　如果一个内嵌函数访问的外部嵌套函数作用域的变量，则这个函数就是闭包
闭包有三个条件：
　　闭包必须有一个一个内嵌函数
　　内嵌函数必须引用外部嵌套函数的变量
　　外部函数返回值必须是内嵌函数
例如：
def make_power(y):
    def power(x):
        return x**y
    return power
a=make_power(2)
b=make_power(3)
print(a(4))   #16
print(b(5))   #125

函数的可重入性：
　　对于一个函数，如果参数一定，返回结果必然一定，则这样的函数为可重入函数
说明：
　　可重入函数通常不会引用外部作用域的变量
函数式编程：
　　是指一系列函数解决问题
好处：
　　每一个函数完成细小功能，一系列函数的任意组合可以完成大问题
　　函数仅接受输入并产生输出，不包括任何影响输入的内部状态　　

高阶函数：
　　满足其一就为高阶函数
　　１．函数接收一个或多个参数作为参数传入
　　２．函数返回一个函数
python3内置（builtin)的高阶函数：
　　map   filter   sorted
map函数：
　　map（func,*iterable)
  用函数对迭可代对象中的每一个元素作为参数计算出新的可迭代对象，当最短的一个
  可迭代对象完成迭代后迭代器生成结束
示例：
def power2(x):
    return x**2
for x in map(power2,range(1,10)):
    print(x)
练习：
１．求1**2+2**2+....9**2的和
２．求1**3+........9**3的和
３求1**9+2**8+....9**1的和

print(sum(map(lambda x:x**3,range(1,10))))

filter函数：
　　filter(function or None,iterable)
  筛选可迭代对象iterable中的数据，返回一个可迭代对象，
  此可迭代对象将对iterable生成的数据进行筛选，
  function函数对iterable每一个元素进行求值，返回False则
  将此数据丢失，返回True则保留此数据
def isodd(x):
    return x%2==1
odd=[x for x in filter(isodd,range(10))]

sorted 函数：
作用：将可迭代对象的数据进行排序后，生成排序后的列表
格式：　sorted(iterable,key=None,reverse=False)
说明:
   key 函数是用来提供一个值，这个值将作为排序的依据
   reverse 标志是用来设置是否降序排序
   l=[5,-2,-4,0,3,1]
   l2=sorted(l)  #l2=[-4,-2,0,1,3,5]
   l4=sorted(l,key=abs)  l4=[0,1,-2,3,-4,5]

eval()函数和　exec()函数
eval()
　　把一个字符串当成一个表达式来执行，返回表达式执行的结果
　　格式：
　　　　eval(source,glabals=None,local=None)
x=100
y=200
s='x+y'
a=eval(s)
print(a)

exec()函数：
　　作用：
　　　　把一个字符串当成程序来执行
　　格式：
　　　　exec(source,globals=None,local=None)
x=100
y=200
s='print('hello',x,y)'
exec(s)
gd={'x':10,'y':20}
ld={'x':1,'y':2}
# exec函数可以改变字典globals，local内容

递归函数recursion
    递归调用是指函数直接或间接的调用自身
示例：
def f():
     f()
f()
print('递归调用结束')

递归函数：
　　递归函数一定要控制递归的层数，当符合一定条件时要终止递归调用
　　几乎所有的递归都能用while循环来代替
实现方法：
　　先假设此函数已经实现，
示例：写一个递归函数打印１－１０的数
def fn(n):
    print(n)
    if n==10:
       return
    fn(n+1)
fn(1)

递归优点：递归可以把问题简单化，让思路更为清晰，代码更简洁
递归缺点：递归因系统环境影响大，当递归深度太大时，可能会得到不可预知的
结果，默认的是１０００层
# def mysum(begin,end):
#     if begin==end:
#         return end
#     return begin +mysum(begin+1,end)
# print(mysum(1,100))   

 练习：
 １．编写函数fac(n)优先使用递归返回n的阶乘（n!=1*2*3..*n)
 2.写程序算出１－２０的阶乘和
 ３．改写之前的学生信息的程序，输入５个学生信息，写４个函数
 ）１．按成绩从高到低打印信息
 ）２．按年龄从高到低打印信息
 ）３．按年龄从低到高打印信息
 ）４．按原来输入的顺序打印信息
 ４．已知有５位朋友在一起，
 第５位比第４位大２岁
　第４位比第３位大２岁
　第３位比第２位大２岁
　第２位比第１位大２岁
第一个说它１０岁
求第５个年龄