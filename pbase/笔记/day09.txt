2017年１２月14日　　星期四　　第9天
函数的参数传递：
参数传递（实参交给行参的方式）
传递方式：
　　位置传参，序列传参，关键字传参，字典关键字传参
位置传参
　　实际参数（实参）的对应关系写形式参数（形参）
　　的对应关系以位置来依次对应的传递方式
说明：
　　实参与形参通过位置进行传递和匹配
　　实参
序列传参：　　是指在函数调用的过程中，用*将序列拆解后依位置进行传递的传参方式
　说明：　　序列拆解时，序列拆解的位置将与形参一一对应
序列传参示意：
def myfun1(a,b,c):
    print('a绑定：',a)
    print('b绑定：',b)
    print('b绑定：',b)
s1=[11,22,33]
myfun1(*s1)

关键字传参：
　　关键字传参是指传参时，按照形参的名称给形参给形参赋值
　　实参和形参按名称进行匹配,可以不按位置进行匹配
myfun1(b=222,c=333,a=111)

字典关键字传参：
　　　是指实参作为字典，将字典**拆解后进行关键字传参
d={'a':1,'b':2,'c':3}
myfun1(**d)
传参说明：
１．字典的键名必须为字符串
２．字典的键名要在形参中存在
３．字典的键名和形参名要一致

函数的组合传参：
　　以上传参方式在能确定形参能唯一匹配到相应实参的情况下可以任意组
可变／不可变类型参数传递区别
示例：
l=[]
def fn(x):
    x.append(10)
fn(l)
print(l)  #[10]
传参说明：
　　不可变数据作为函数参数传入时，函数内部不会改变变量原数据，是安全的
　　可变类型的数据作为参数传入函数时，函数内部可以改变原数据，通常
　　用来返回更多函数执行结果
练习：
写一个函数splice_odd_even(l,o,e): 传入一些数据，用l传入一些数据
（l是可迭代对象），把l中数据的奇数部分
def f1(x):
    x.append(5)
def f2(x):
    x=[1,2,3]
l=[]
print(f1(l))   #None
print(f2(l))  #None

0 不能用int,否则会报错

－－－－－－－－－－－形参－－－－－－－－－－－－－
函数的缺省参数：
语法：
　　def 函数名（形参１＝默认参数１，形参２＝默认参数２．..）
　　　　　　语句
示例：
def info(name,age=1,address='不详')：
　　　print('我叫:',name,'我今年：'，age,'我的住址：'，address)
info('魏明泽',35,'北京市朝阳区',)
info('tarena',10)
info('zhangfei')

说明：缺省参数不许自右向左依次存在，如果一个参数有缺省参数，则其右侧的
所有参数必须you缺省参数
示例：
def test_fu(a,b=10,c,d=2):  #错误
    pass

星号元组行参：
　　语法：
　　　　　def 函数名（*元组形参名）：
作用：
　　收集多余的位置传参
示例：
def func(*args):
    print(args)
func()   #调用，不传实参
func(1,2,3,4)
练习：写一个函数mysum,可以传入任意个数字，返回所有实参的和
def mysum(*args):
    s=0
    for x in args:
        s+=x
    return s
print(mysum(1,5,3,6))

命名关键字形参
语法：
　　def 函数(*,命名关键字形参):
　　　　　　语句
　　def 函数(*args,命名关键字形参):
　　　　　　语句
作用:
所有的命名关键字形参必须用关键字或字典关键字传参
def myfun2(a,*,b)  #作为位置形参和命名关键字形参的分隔符

双星号字典形参：
语法：
　　def 函数名（**字典形参名）：
作用:
   收集多余的关键字形参
def func(**kwargs):   #kwargs   keywords argument
    print('参数个数：'，len(kwargs))
    print(kwargs)
func(a=1,b=2,c=3)

练习：
写一个函数minmax,至少有一个参数，返回参数的最大值和最小值，最小值在前，调用此函数，得到最小值和最大值并打印
zx,zd=minmax(1,2,3,4,5,6)
print(zx,zd)   #1 6
zx,zd=minmax('a1','b0','c3') 
print(zx,zd)    #a1 c3

函数的形参说明：
　　位置形参，星号元组形参，命名关键字形参，**字典形参，缺省参数，可以混合使用
函数参数自左向右顺序为：
　　１．位置形参
　　２．星号元组形参
　　３．命名关键字形参
　　４．双星号字典形参
　示例：
　　　def fn(a,b,*args,c=100,**kwargs):
        pass
fn(100,200,300,400,c='C',d='d')

函数的不定长参数：
　　有两种：
　　　　星号元组形参
　　　　双星号字典形参
示例：可以接受任意的位子传参和关键字传参的函数
def fn(*arge,**kwarge)
      pass

练习：
１．查看帮助>>>help(print)
 思考print函数是如何定义的
２．写一个myrange函数，参数可以传１－３个，实际意义与range函数规则相同
，此函数返回range规则的列表
如：
l=myrange(4)
print(l)#[0,1,2,3]
l=myrange(1,10,3)   #[1,4,7]
3.思考max函数的参数列表如何的，我们能否写一个mymax函数，


