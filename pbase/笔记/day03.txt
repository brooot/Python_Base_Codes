2017年１２月6日，周三，第三天培训。

布尔运算:
　　运算符：
　　　　not and  or
布尔非操作　not
语法：　not x,
作用：对布尔进行布尔取非，如果bool(x)为True,则返回False,反之也成立
示例：
　　　not True #False
   not 100  #False
布尔　与　操作　　and
语法：x and y   注：x,y代表表达式
作用：优先返回假值对象，当x的布尔值为False时，返回x，
示例：True and True  #返回第二个True
     False and True #返回　False
     False and False #返回False（第一个）

布尔　或　操作　or
语法：x or y
作用：优先返回真值对象
示例：
　　True and True #返回True(第一个True)
  False and False #返回第二个False

正负号运算符
＋（正号）　－（负号）
示例:
 c=(2-3j)
 c2=-c
 c2=(-2+3j)

位运算符：
　　＆　位与　　　　按位操作，两个对应的位都为１，结果为１，否则为０
　　|  位或　　　　按位操作，两个对应的位只要有一个为１，结果为１
　　^  位异或　　　（在６上面）按位操作，两个对应的位不同，结果为１，相同为０
　　<< 左移　　　　将x的二进制值按位向左移动y位，低位补０
　　>> 右移　　　　将x的二进制值按位向右移动y位，低位溢出丢弃
  ~  位取反　　　~0为-1,-1为0,
  术语：
  　bit(位)　　８个位byte(字节)

  bin(x)函数，将x 转换为二进制的字符串

单引号内的双引号不算结束符
双引号内的单引号不算结束符

１三引号内可以包含单引和双引号
２．三引号字符串中的换行会自动转换为换行符(\n)


用转义序列代表特殊符：字符串中，用反斜杠（\）后跟一些字符串代表特殊的一个字符串

字符串转义字符表：
\'    代表单引号
\“　　　　代表双引号
\n    代表换行符
\\    一个反斜杠
\t　　　　水平制表符(tab)
\v　　　　垂直制表符
\r　　　　返回光标至行首
\a　　　　响铃
\f　　　　换页
\b　　　　倒退
\0　　　　空字符
\x××　　为十六进制表示的字符
\u××××　unicode-16的十六进制表示的字符
\U××××××××　　unicode32的十六进制表示的字符

python3 的解释器内部都是用的Unicode-16储存字符串的

ASCII编码：0~127
$ man ascii<回车>

Unicode  128~65535(中文)

len(s) 返回一个字符串的字符数

raw 字符串　（原是字符串）
字面值格式：
r"字符串内容"
r""字符串内容""
作用：让转义字符无效

str字符串：
用来记录文本信息

字符串的运算：
＋　加号运算符用于拼接字符串
示例：　s1='abc',s2='def',s3=s1+s2  #s3='abcdef'
+= 运算符用于原字符串与右侧字符串拼接，生成新字符串并改变变量的绑定关系
示例：s1+=s2  #s1=s1+s2
* 运算符生成重复的字符串
　　s='abc'*3   #s='abcabcabc'
*=  

字符串的比较运算:
<,>,<=,>＝，＝＝，！＝
abc>ABC>123

in/not in 运算符
作用：用于序列，字典，集合中，用于判断某个值是否存在于对象中
格式：　对象　ｉｎ　序列　
s='ABC'
'A' in s  #True
'AC'　in s $False

python运算符的优先级：
**   指数
＋－　　　按位反转，正负号
* / *  //
+,-   加减
<<,>>  左移，右移
＆　　　　　位于
^      位异或
|      位或
<,>,<=,==,!=, is, in, 
not,and,or,(布尔)    if elif  else,

练习：
１．用字符串*运算符，打印三角形，要求输入一个整数，此整数代表此三角形左侧的字节数，请输入３
　　　　　　*
     ***
    *****
   *******
